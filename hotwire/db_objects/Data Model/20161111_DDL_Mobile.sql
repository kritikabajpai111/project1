-- MySQL Script generated by MySQL Workbench
-- 11/14/16 15:22:45
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema hwc_mobile
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema hwc_mobile
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `hwc_mobile` DEFAULT CHARACTER SET utf8 ;
USE `hwc_mobile` ;

-- -----------------------------------------------------
-- Table `hwc_mobile`.`invite_code`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `hwc_mobile`.`invite_code` ;

CREATE TABLE IF NOT EXISTS `hwc_mobile`.`invite_code` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT 'The primary key of the tblInviteCode table. ',
  `invitation_code` NVARCHAR(20) NOT NULL COMMENT 'a unique invite code generated for each property user that is invited to the portal. ',
  `generate_date` DATETIME NOT NULL COMMENT 'The date and time the code was generated.',
  `expire_date` DATETIME NOT NULL COMMENT 'The date the invitiation code will expire.',
  `claim_date` DATETIME NULL,
  `head_household_invite` TINYINT(1) NOT NULL COMMENT 'a boolean indicating if the user is a head of house hold. This is for the first user of an account to be invited to register. When the head of house hold flag is false, this is for a family member. ',
  `first_name` NVARCHAR(50) NOT NULL COMMENT 'The first name of the user being invited to the community portal.',
  `last_name` NVARCHAR(50) NOT NULL COMMENT 'The last name of the user being invited to the community portal.',
  `emailaddress` NVARCHAR(50) NOT NULL COMMENT 'The email of the user being invited to the community portal.',
  `phone` NVARCHAR(50) NULL COMMENT 'The phone number of the user being invited to the community portal.',
  `password` NVARCHAR(50) NULL,
  `billing_site_id` NVARCHAR(50) NULL COMMENT 'This is a refererne to the site ID from the amdocs billing system. This is denormalized from the tblPropertyAddress.',
  `property_address_id` INT NULL COMMENT 'This is a foreign key to the tblPropertyAddress table. When addresses and invite codes are loaded into the system, the property address table will be populated.',
  `property_name` NVARCHAR(50) NULL COMMENT 'The name of the property associated with the invitation code. ',
  `mod_person_id` INT(11) NOT NULL COMMENT 'A non-enforced foreign key to the person table, this identifies the user that last modified the record.',
  `active` TINYINT(1) NULL COMMENT 'A boolean indicating if the record is active or not. ',
  PRIMARY KEY (`id`),
  UNIQUE INDEX `Code_UNIQUE` (`invitation_code` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `verify_code`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `verify_code` ;

CREATE TABLE `verify_code` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `code` int(11) DEFAULT NULL,
  `reference` varchar(40) CHARACTER SET utf8 DEFAULT NULL,
  `dt_expire` datetime DEFAULT NULL,
  `ts_inserted` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `ts_modified` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB;

-- -----------------------------------------------------
-- Table `hwc_mobile`.`time_zone`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `hwc_mobile`.`time_zone` ;

CREATE TABLE IF NOT EXISTS `hwc_mobile`.`time_zone` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT 'The primary key of the tblTimeZone table. ',
  `zone_name` NVARCHAR(50) NOT NULL COMMENT 'The name of the time zone',
  `utc_difference` TINYINT NOT NULL COMMENT 'The number of hours positive or negative from the UTC time for the particulare time zone. ',
  `use_daylight` TINYINT(1) NOT NULL,
  `display_name` NVARCHAR(100) NOT NULL,
  `active` TINYINT(1) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `hwc_mobile`.`user`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `hwc_mobile`.`user` ;

CREATE TABLE IF NOT EXISTS `hwc_mobile`.`user` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT 'The primary key of the tblUser table. ',
  `first_name` NVARCHAR(50) NOT NULL COMMENT 'The first name of the customer/user of the system. ',
  `last_name` NVARCHAR(50) NOT NULL COMMENT 'The last name of the customer / user of the system. ',
  `username_custom` NVARCHAR(50) NULL COMMENT 'The user has the ability to log into the system with an email address or a custom username, if the user chooses a custom username this is the column where the data is stored. ',
  `emailaddress_login` NVARCHAR(50) NULL COMMENT 'If the user chooses to use the email address to login to the system, this is the email address for the login. this is denormalized from the tblContact table to speed up the login process. ',
  `cloud_id` NVARCHAR(50) NOT NULL COMMENT 'This is the ID of the cloud based identify management server for the user. In the original version of deployment this is the Synacor ID.',
  `pin` NVARCHAR(10) NOT NULL COMMENT 'The PIN number to identify the user when forgetting password or calling customer service. ',
  `BillingSiteID` NVARCHAR(50) NULL COMMENT 'The unique customer number identified in the billing system. ',
  `head_of_household` TINYINT(1) NOT NULL COMMENT 'A boolean identifying if the user is the head of the household. This is used for security purposes.',
  `push_notification_enabled` TINYINT(1) NOT NULL COMMENT 'If the user agrees to push notifications, this boolean field will be set to true. ',
  `invitecode_id` INT NOT NULL COMMENT 'a foreign key to the InviteCode table. This is a code generated and sent to the user when the user registers with the system. ',
  `timezone_id` INT NOT NULL COMMENT 'A foreign key to the tblTimeZone table outlining the time zone of the user. ',
  `mod_person_id` INT(11) NOT NULL COMMENT 'A non-enforced foreign key to the person table, this identifies the user that last modified the record.',
  `active` TINYINT(1) NOT NULL COMMENT 'A boolean indicating if the record is active or not. ',
  PRIMARY KEY (`id`),
  INDEX `fk_tblUser_tblInviteCode_idx` (`invitecode_id` ASC),
  INDEX `tblUser_TimeZoneID_idx` (`timezone_id` ASC),
  CONSTRAINT `fk_tblUser_tblInviteCode`
    FOREIGN KEY (`invitecode_id`)
    REFERENCES `hwc_mobile`.`invite_code` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `tblUser_TimeZoneID`
    FOREIGN KEY (`timezone_id`)
    REFERENCES `hwc_mobile`.`time_zone` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `hwc_mobile`.`state`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `hwc_mobile`.`state` ;

CREATE TABLE IF NOT EXISTS `hwc_mobile`.`state` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT 'The primary of the tblState table.',
  `name` NVARCHAR(50) NOT NULL COMMENT 'The name of the state.',
  `abbreviation` NVARCHAR(2) NOT NULL COMMENT 'An abbreviation for the state such as FL for Florida. ',
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `hwc_mobile`.`address`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `hwc_mobile`.`address` ;

CREATE TABLE IF NOT EXISTS `hwc_mobile`.`address` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT 'The primary key of the tblAddress table. ',
  `address_line1` NVARCHAR(50) NOT NULL COMMENT 'The first line of the address',
  `address_line2` NVARCHAR(50) NULL COMMENT 'The second line of the address',
  `state_id` INT NOT NULL COMMENT 'A FK to the tblState table identifying the state of the address. ',
  `city` NVARCHAR(50) NOT NULL COMMENT 'The city of the address.',
  `postal_code` NVARCHAR(10) NULL COMMENT 'The zip / postal code of the address',
  PRIMARY KEY (`id`),
  INDEX `fk_tblAddress_tblState1_idx` (`state_id` ASC),
  CONSTRAINT `fk_tblAddress_tblState1`
    FOREIGN KEY (`state_id`)
    REFERENCES `hwc_mobile`.`state` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `hwc_mobile`.`property_address`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `hwc_mobile`.`property_address` ;

CREATE TABLE IF NOT EXISTS `hwc_mobile`.`property_address` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT 'The primary key of the tblPropertyAddress table.',
  `address_id` INT NOT NULL,
  `msa_property_id` INT NOT NULL COMMENT 'A non enforced foreign key to the MSA_Property table. The MSA_Property table is an existing table outside of the new modeling standards.',
  `billing_site_id` INT NOT NULL COMMENT 'An unenforced FK to the site ID generated from the Amdocs billing system. ',
  `mod_person_id` INT(11) NOT NULL COMMENT 'A non-enforced foreign key to the person table, this identifies the user that last modified the record.',
  `active` TINYINT(1) NOT NULL COMMENT 'A boolean indicating if the record is active or not. ',
  PRIMARY KEY (`id`),
  INDEX `fk_tblPropertyAddress_tblAddress1_idx` (`address_id` ASC),
  CONSTRAINT `fk_tblPropertyAddress_tblAddress1`
    FOREIGN KEY (`address_id`)
    REFERENCES `hwc_mobile`.`address` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `hwc_mobile`.`user_property_address`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `hwc_mobile`.`user_property_address` ;

CREATE TABLE IF NOT EXISTS `hwc_mobile`.`user_property_address` (
  `ID` INT NOT NULL AUTO_INCREMENT COMMENT 'The primary key of the tblUserPropertyAddress table.',
  `property_address_id` INT NOT NULL COMMENT 'A foreign key to the propery_address table. ',
  `user_id` INT NOT NULL COMMENT 'A foreign key to the user table',
  `active` TINYINT(1) NOT NULL COMMENT 'The active boolean is used to keep a history of properties that were inactivated. ',
  `mod_person_id` INT(11) NOT NULL COMMENT 'A non-enforced foreign key to the person table, this identifies the user that last modified the record.',
  PRIMARY KEY (`ID`),
  INDEX `UserPropertyAddress_PropertyAddressID_idx` (`property_address_id` ASC),
  INDEX `UserPropertyAddress_UserID_idx` (`user_id` ASC),
  CONSTRAINT `UserPropertyAddress_PropertyAddressID`
    FOREIGN KEY (`property_address_id`)
    REFERENCES `hwc_mobile`.`property_address` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `UserPropertyAddress_UserID`
    FOREIGN KEY (`user_id`)
    REFERENCES `hwc_mobile`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `hwc_mobile`.`user_session`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `hwc_mobile`.`user_session` ;

CREATE TABLE IF NOT EXISTS `hwc_mobile`.`user_session` (
  `ID` INT NOT NULL AUTO_INCREMENT COMMENT 'The primary key of the tblUserSession table. ',
  `user_id` INT NOT NULL COMMENT 'A foreign key to the tblUser table. this defines the user that had the session.',
  `token` NVARCHAR(50) NOT NULL COMMENT 'A generated token that is used for the open session communication. This is used for security purposes',
  `expire_date` DATETIME NOT NULL COMMENT 'The date and time the token and security session is valid. If the date is past, a new session will be required to communicate to the API middleware. .',
  `mod_person_id` INT(11) NULL COMMENT 'A non-enforced foreign key to the person table, this identifies the user that last modified the record.',
  `active` TINYINT(1) NULL COMMENT 'A boolean indicating if the record is active or not. ',
  PRIMARY KEY (`ID`),
  INDEX `tblUserSession_UserID_idx` (`user_id` ASC),
  CONSTRAINT `tblUserSession_UserID`
    FOREIGN KEY (`user_id`)
    REFERENCES `hwc_mobile`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `hwc_mobile`.`user_account`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `hwc_mobile`.`user_account` ;

CREATE TABLE IF NOT EXISTS `hwc_mobile`.`user_account` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT 'The primary key of the tblUserAccount table. ',
  `user_property_address_id` INT NOT NULL COMMENT 'A foreign key to the tblUserPropertyAddress table. This will define the property, user and address for the account. Since a user can have many accounts with different properties this table defines the account for the particular property. ',
  `billing_account_number` NVARCHAR(50) NOT NULL COMMENT 'The customers billing account number. A user can have many different accounts including accounts at different properties within the same community or different communities.',
  PRIMARY KEY (`id`),
  INDEX `tblUserAccount_UserPropertyAddressID_idx` (`user_property_address_id` ASC),
  CONSTRAINT `tblUserAccount_UserPropertyAddressID`
    FOREIGN KEY (`user_property_address_id`)
    REFERENCES `hwc_mobile`.`user_property_address` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `hwc_mobile`.`contact`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `hwc_mobile`.`contact` ;

CREATE TABLE IF NOT EXISTS `hwc_mobile`.`contact` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT 'The primary key of the tblContact table.',
  `information` NVARCHAR(50) NOT NULL COMMENT 'The actual contact information. This could be an email address, a cell phone, home phone, primary email address, etc. ',
  `user_id` INT NOT NULL COMMENT 'A foreign key to the tblUser table. The user this contact information is related to.',
  `ContactTypeLI` INT NOT NULL COMMENT 'A foreign key to the ',
  `verified` TINYINT(1) NOT NULL COMMENT 'a boolean identifying if the contact type was verified. In cases of mobile phone they may need to be verified by the customer. ',
  `primary` TINYINT(1) NOT NULL COMMENT 'This boolean column identifies if the contact is the users primary contact. ',
  `confirmation_code` NVARCHAR(50) NULL COMMENT 'In the event the contact has to be verified a confirmation code is used to verfiy and that informatino is stored here. ',
  `mod_person_id` INT(11) NOT NULL COMMENT 'A non-enforced foreign key to the person table, this identifies the user that last modified the record.',
  `active` TINYINT(1) NOT NULL COMMENT 'A boolean indicating if the record is active or not. ',
  PRIMARY KEY (`id`),
  INDEX `tblContact_UserID_idx` (`user_id` ASC),
  CONSTRAINT `tblContact_UserID`
    FOREIGN KEY (`user_id`)
    REFERENCES `hwc_mobile`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `hwc_mobile`.`contract`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `hwc_mobile`.`contract` ;

CREATE TABLE IF NOT EXISTS `hwc_mobile`.`contract` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT 'The primary key of the tblContract table. ',
  `text` NVARCHAR(2000) NOT NULL COMMENT 'The contract text that is displayed to the end user for acceptance.',
  `contract_type_li` INT NOT NULL COMMENT 'A foreign key to the vlist_item table. This is the type of contract the user is reviewing such as privacy policy or TOS.',
  `modified_date` DATETIME NOT NULL COMMENT 'The date and time the contract was modified. IF this date is after the date time the user accepted the contract they will need to reaccept the contract via the user interface. ',
  `active` TINYINT(1) NOT NULL COMMENT 'A flag indicating if the contract is active',
  `mod_person_id` INT(11) NOT NULL COMMENT 'A non-enforced foreign key to the person table, this identifies the user that last modified the record.',
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `hwc_mobile`.`user_contract`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `hwc_mobile`.`user_contract` ;

CREATE TABLE IF NOT EXISTS `hwc_mobile`.`user_contract` (
  `ID` INT NOT NULL AUTO_INCREMENT COMMENT 'The primary key of the tblUserContract table. ',
  `user_id` INT NOT NULL COMMENT 'A foreign key to the tblUser table. This defines teh contract for the user that accepted the contract. ',
  `contract_id` INT NOT NULL COMMENT 'A foreign key to the tblContract table. This defines the contract the user accepted',
  `accepted_date` DATETIME NOT NULL COMMENT 'The date and time the user accepeted the contract. ',
  `mod_person_id` INT(11) NOT NULL COMMENT 'A non-enforced foreign key to the person table, this identifies the user that last modified the record.',
  `active` TINYINT(1) NOT NULL COMMENT '\nA boolean indicating if the record is active or not. ',
  PRIMARY KEY (`ID`),
  INDEX `tblUserContract_UserID_idx` (`user_id` ASC),
  INDEX `tblUserContract_ContractID_idx` (`contract_id` ASC),
  CONSTRAINT `tblUserContract_UserID`
    FOREIGN KEY (`user_id`)
    REFERENCES `hwc_mobile`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `tblUserContract_ContractID`
    FOREIGN KEY (`contract_id`)
    REFERENCES `hwc_mobile`.`contract` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `hwc_mobile`.`family_member`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `hwc_mobile`.`family_member` ;

CREATE TABLE IF NOT EXISTS `hwc_mobile`.`family_member` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT 'The primary key of the tblFamilyMember table. ',
  `head_household_user_id` INT NOT NULL COMMENT 'A foreign key to the tblUser table, this identifies the head of house hold for the property and account.',
  `family_member_user_id` INT NOT NULL COMMENT 'A foreign key to the tblUser table. This defines the family member user information.',
  `mod_person_id` INT(11) NOT NULL COMMENT 'A non-enforced foreign key to the person table, this identifies the user that last modified the record.\n',
  `active` TINYINT(1) NOT NULL COMMENT 'A boolean indicating if the record is active or not. ',
  PRIMARY KEY (`id`),
  INDEX `tblFamilyMember_HeadOfHouseholdUserID_idx` (`head_household_user_id` ASC),
  INDEX `tblFamilyMember_FamilyMemberUserID_idx` (`family_member_user_id` ASC),
  CONSTRAINT `tblFamilyMember_HeadOfHouseholdUserID`
    FOREIGN KEY (`head_household_user_id`)
    REFERENCES `hwc_mobile`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `tblFamilyMember_FamilyMemberUserID`
    FOREIGN KEY (`family_member_user_id`)
    REFERENCES `hwc_mobile`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `hwc_mobile`.`language`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `hwc_mobile`.`language` ;

CREATE TABLE IF NOT EXISTS `hwc_mobile`.`language` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT 'The primary key of the tblLanguage table. ',
  `name` NVARCHAR(50) NOT NULL COMMENT 'The name of the language.',
  `languagecol` VARCHAR(45) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `hwc_mobile`.`user_language`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `hwc_mobile`.`user_language` ;

CREATE TABLE IF NOT EXISTS `hwc_mobile`.`user_language` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT 'The primary key of the tblUserLanaguage table. ',
  `user_id` INT NOT NULL COMMENT 'A foreign key to the tblUser table. This identifies the user that speaks the language mapped to the LanguageID column. ',
  `language_id` INT NOT NULL COMMENT 'a foreign key to the tblLanguage table, this is the language the UserID speaks. ',
  `mod_person_id` INT(11) NOT NULL COMMENT 'A non-enforced foreign key to the person table, this identifies the user that last modified the record.',
  `active` TINYINT(1) NOT NULL COMMENT 'A boolean indicating if the record is active or not. ',
  PRIMARY KEY (`id`),
  INDEX `tblUserLanguage_UserID_idx` (`user_id` ASC),
  INDEX `tblUserLanguage_LanguageID_idx` (`language_id` ASC),
  CONSTRAINT `tblUserLanguage_UserID`
    FOREIGN KEY (`user_id`)
    REFERENCES `hwc_mobile`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `tblUserLanguage_LanguageID`
    FOREIGN KEY (`language_id`)
    REFERENCES `hwc_mobile`.`language` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
